%+
% NAME:
%  recoversweepmmf()
%
% VERSION:
%  $Id:$
%
% AUTHOR:
%  A. Thiel
%
% DATE CREATED:
%  9/2007
%
% AIM:
%  Generate firing rate matrix from memory map file.
%
% DESCRIPTION:
%  This routine can be used to recover firing rate data for a single
%  repetition of an experiment (sweep) from a MATALB memory map file
%  generated by <A>instantrate</A>.
%
% CATEGORY:
%  Signals
%
% SYNTAX:
%* sr=recoversweepmmf(mmfinfo[,swidx]);
%
% INPUTS:
%  mmfinfo:: Structure containing information about the memory map
%            file. This structure is returned by <A>instantrate</A> when
%            the <VAR>memmapfile</A> option is used.
%
% OPTIONAL INPUTS:
%  swidx:: Index of the sweep which is to be recovered. If this argument
%          is omitted, the first sweep is returned.
%
% OUTPUTS:
%  sr:: The result is a structure with two fields:
%*       sr
%*        |---single: Matrix of single cell firing rates, format is
%*                    (number of samples x number of neurons)
%*        |---population: Population firing rates in Hz as a function of 
%*                        time.
%
% RESTRICTIONS:
%  Only one sweep at a time can be returned, since it is assumed that
%  more data would not fit into memory.
%
% PROCEDURE:
%  Recover information from the input structure and call MATALB's
%  memorymapfile function with the respective arguments.
%
% EXAMPLE:
%  Indicate example lines with * as the first character. These lines
%  will be typeset in a fixed width font. Indicate user input with >>. 
%* >> data=example_function(23,5)
%* ans =
%*   28
%
% SEE ALSO:
%  <A>instantrate</A>, MATLAB memory map files. 
%-

function sr=recoversweepmmf(mmfinfo,swidx)
  
  if (~exist('swidx'))
    swidx=1;
  end
  
  if (swidx<1)||(swidx>mmfinfo.nsweeps)
    error('Sweep index out of range.')
  end
  
  m = memmapfile(mmfinfo.memmapfile, ...
                 'format', mmfinfo.mmfformat, ...
                 'writable', false,...
                 'repeat',1);

  dur=mmfinfo.mmfformat{1,2}(1)
  nproto=mmfinfo.mmfformat{1,2}(2)
    
  m.offset=mmfinfo.nbytes*(swidx-1);
  
  sr.single=m.data.single
  sr.population=m.data.population
  
