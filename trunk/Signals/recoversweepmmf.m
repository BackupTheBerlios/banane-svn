%+
% NAME:
%  recoversweepmmf()
%
% VERSION:
%  $Id$
%
% AUTHOR:
%  A. Thiel
%
% DATE CREATED:
%  9/2007
%
% AIM:
%  Generate firing rate matrix from memory map file.
%
% DESCRIPTION:
%  This routine can be used to recover firing rate data for a single
%  repetition of an experiment (sweep) from a MATLAB memory map file
%  generated by <A>instantrate</A>.
%
% CATEGORY:
%  Signals
%
% SYNTAX:
%* sr=recoversweepmmf(mmfinfo[,swidx]);
%
% INPUTS:
%  mmfinfo:: Structure containing information about the memory map
%            file. This structure is returned by <A>instantrate</A> when
%            the <VAR>memmapfile</VAR> option is used.
%
% OPTIONAL INPUTS:
%  swidx:: Index of the sweep which is to be recovered. If this argument
%          is omitted, the first sweep is returned.
%
% OUTPUTS:
%  sr:: The result is a structure with two fields:
%*       sr
%*        |---single: Matrix of single cell firing rates, format is
%*                    (number of samples x number of neurons)
%*        |---population: Population firing rates in Hz as a function of 
%*                        time.
%*        |---factor: Factor to convert spike counts into firing
%*                    rates. To obtain firing rates in units of
%*                    Hz for single neurons, multiply 
%*                    <VAR>sr.single</VAR> with this factor.  
%
% RESTRICTIONS:
%  Only one sweep at a time can be returned, since it is assumed that
%  more data would not fit into memory.
%
% PROCEDURE:
%  Recover information from the input structure and call MATLAB's
%  memorymapfile function with the respective arguments.
%
% EXAMPLE:
%  Generate a sample sweep structure with two sweeps, 50 neurons and
%  random spikes, with higher firing probability during the second
%  half of the experiment. 
%
%*>> rspikes1=rand(1000,100)<0.01;
%*>> rspikes2=rand(1000,100)<0.08;
%*>> rspikes=[rspikes1;rspikes2];
%*
%*>> rsp.nproto=50
%*>> rsp.duration=2
%*>> rsp(2).nproto=50
%*>> rsp(2).duration=2
%*
%*>> for pidx=1:50
%*>>   rsp(1).pr(pidx).eln=pidx;
%*>>   rsp(1).pr(pidx).prn=1;
%*>>   rsp(1).pr(pidx).ts=0.001*find(rspikes(:,pidx));
%*>> end
%*>> for pidx=1:50
%*>>   rsp(2).pr(pidx).eln=pidx;
%*>>   rsp(2).pr(pidx).prn=1;
%*>>   rsp(2).pr(pidx).ts=0.001*find(rspikes(:,pidx+50));
%*>> end
%  Compute the firing rates within a 100ms window and save the result as
%  a memory map file:
%*>> ir=instantrate(rsp,'windowsize',0.1,'memmapfile','rates.mmf','vartype','uint8');
%  Recover the data of sweep number 2:
%*>> sp=recoversweepmmf(ir,2);
%*
%  Plot firing rates of neurons 1 and 2 and the population average:
%*>> plot(sp.single(:,1)*ir.factor)
%*>> hold on
%*>> plot(sp.single(:,2)*ir.factor,'k')
%*>> plot(sp.population,'r')
%
% SEE ALSO:
%  <A>instantrate</A>, MATLAB memory map files. 
%-

function sr=recoversweepmmf(mmfinfo,swidx)
  
  if (~exist('swidx'))
    swidx=1;
  end
  
  if (swidx<1)||(swidx>mmfinfo.nsweeps)
    error('Sweep index out of range.')
  end
  
  m = memmapfile(mmfinfo.memmapfile, ...
                 'format', mmfinfo.mmfformat, ...
                 'writable', false,...
                 'repeat',1);

  m.offset=mmfinfo.nbytes*(swidx-1);
  
  sr.single=m.data.single;
  sr.population=m.data.population;
  sr.factor=mmfinfo.factor;
  
