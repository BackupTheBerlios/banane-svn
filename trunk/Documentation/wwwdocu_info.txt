The Banane WWW Documentation


All routines need the varaiable 
BANANEPATH="/home/groups/banane/htdocs/wwwcopy/Banane"
to be set to the appropriate value.



$BANANEPATH/Documentation/Perl/.

./updatemain.pl: Main Perl script that uses the output of SVN update
to determine which routines have been changed. The headers of these
routines are parsed and the result is used to update the mySQL
database.

./parseupdate.pm: Perl module that contains the grammar and a function
to parse the output of SVN update, i.e. to determine paths and filenames of
routines that have been comitted since the last update.

./parseheader.pm: Perl module containing the grammar to parse the file
header. Returns the sections of the header as a hash that can be used
as input to the mySQL database.

./resetdb: Skript to drop the database tables, define them anew and
populate them with the header information of every .m-file in the
bananepath.


$BANANEPATH/Documentation/Scripts/.

./wwwupdate.scr: executes svn update of Banane working copy at the
berlios web server and calls
$BANANEPATH/Documentation/Perl/parse_update.pl to update the database.

./wwwdocu_conf.scr: Script that return the appropriate values of
local values, e.g. mySQL server and user. Also, this script returns
the path to the webserver. This is done via the echo
command to ensure that both PERL- and PHP-Scripts can use this
info. May be extended for other "global" settings.



$BANANEPATH/Documentation/PHP/.
All routines for the display of the web docu are located in this
directory.

banane.gif : logo picture
bananestyle.css : style sheet file
berlioslogo.html : frame source that shows the berlios logo
index.php : script that calls mainpage.html, copy this to the website
            start dierctory
intro.html : frame source with welcome text and basic information
logo.html : frame source showing the banane logo and links
mainpage.php : defines frame structure of the main webpage and fills
               frames with the respective sources
searchform.html : frame source with form for routine search
viewdir.php : displays table with routines in given directory
viewroutine.php : displays header info for given routine as a table
viewsearch.php : displays search results, either a list of matches
                 with the same style as viewdir.php or a single
                 routine by diretcly calling viewroutine.php
viewtree.php : frame source displaying banane directoy tree
 


DATABASE:
mySQL database banane, presently at db.berlios.de. Access with
mysql -h db.berlios.de -u banane -p banane
Enter password: TIpKEPc26U

Primary table "routines" initialized with command
CREATE TABLE routines (name VARCHAR(128), aim VARCHAR(128),
description VARCHAR(1024), category VARCHAR(512), PRIMARY KEY(name));

Tables may also be initialized by the resetdb.pl script.

Added other colums later:
ALTER TABLE routines ADD fullpath VARCHAR(128) AFTER name;
ALTER TABLE routines ADD version VARCHAR(128) AFTER fullpath;
ALTER TABLE routines ADD proc VARCHAR(512) AFTER restrictions;
etc...

mysql> describe routines;
+--------------+--------------+------+-----+---------+-------+
| Field        | Type         | Null | Key | Default | Extra |
+--------------+--------------+------+-----+---------+-------+
| name         | varchar(128) |      | PRI |         |       |
| fullpath     | varchar(128) | YES  |     | NULL    |       |
| relativepath | varchar(128) | YES  |     | NULL    |       |
| version      | varchar(128) | YES  |     | NULL    |       |
| author       | varchar(128) | YES  |     | NULL    |       |
| date         | varchar(128) | YES  |     | NULL    |       |
| aim          | varchar(128) | YES  |     | NULL    |       |
| description  | text         | YES  |     | NULL    |       |
| category     | text         | YES  |     | NULL    |       |
| syntax       | text         | YES  |     | NULL    |       |
| restrictions | text         | YES  |     | NULL    |       |
| proc         | text         | YES  |     | NULL    |       |
| also         | text         | YES  |     | NULL    |       |
| example      | text         | YES  |     | NULL    |       |
+--------------+--------------+------+-----+---------+-------+



Secondary table "inputs" initialized with
CREATE TABLE inputs (name VARCHAR(128), count TINYINT UNSIGNED, argument VARCHAR(128),description VARCHAR(1024));
Create tables optinputs and outputs analoguously.

Tables are connected via "name" that uniquely
identifies the routines. Multiple inputs to the same routine can be
inserted in the inputs table repeating the name of the routine.



Regular update of the database with cronjob, since post-commit script
does not allow execution of arbitrary scripts. 

Command to edit crontab: crontab -e. 

Call wwwupdate.scr explicitely., since it cannot know the path.

Crontab looks like this

SHELL=/bin/bash
MAILTO=andreas.thiel@gmail.com
34 17 * * * /home/groups/banane/htdocs/wwwcopy/Banane/Documentation/Scripts/wwwupdate.scr



TO DO
- include possibility to delete a file. Action "D" in svn update
- make the $id$ tag work in svn: Command works only on single
routines: svn propset svn:keywords "Id" kwextract.m but at least acts
for the wwwcopy as well
- automatically mail commits to the blog
- section "side effects" needed???
- backup of repository?
- make category section to choose from a set of possibilities
- add source to db and create script to show it.
- say something if parsing goes wrong, better error processing in
updatemain. 
- Are success variables suitable? what exactly do they do? avoid
warnings in resetdb
- possibly enable searching aims, or even the whole db?


